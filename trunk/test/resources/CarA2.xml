<?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE model PUBLIC "-//eVelopers Corp.//DTD State machine model V1.0//EN" "http://www.evelopers.com/dtd/unimod/statemachine.dtd">
<model name="Model1">
  <controlledObject class="ru.ifmo.control.manager.CarManager2" name="o1"/>
  <eventProvider class="ru.ifmo.control.event.CarEventProvider" name="p1">
    <association clientRole="p1" targetRef="A1"/>
  </eventProvider>
  <rootStateMachine>
    <stateMachineRef name="A1"/>
  </rootStateMachine>
  <stateMachine name="A1">
    <configStore class="com.evelopers.unimod.runtime.config.DistinguishConfigManager"/>
    <association clientRole="A1" supplierRole="o1" targetRef="o1"/>
    <association clientRole="A1" supplierRole="A2" targetRef="A2"/>
    <state name="Top" type="NORMAL">
      <state name="s1" type="INITIAL"/>
      <state name="create new" type="NORMAL">
        <outputAction ident="o1.z7"/>
      </state>
      <state name="crash" type="NORMAL">
        <outputAction ident="o1.z6"/>
        <outputAction ident="o1.z4"/>
      </state>
      <state name="move to player" type="NORMAL">
        <stateMachineRef name="A2"/>
      </state>
      <state name="leave bounds" type="NORMAL">
        <outputAction ident="o1.z4"/>
        <outputAction ident="o1.z7"/>
      </state>
      <state name="do maneuver" type="NORMAL">
        <outputAction ident="o1.z3"/>
        <outputAction ident="o1.z9"/>
        <outputAction ident="o1.z1"/>
      </state>
    </state>
    <transition sourceRef="s1" targetRef="create new"/>
    <transition event="e1" sourceRef="create new" targetRef="move to player"/>
    <transition event="e3" sourceRef="crash" targetRef="create new"/>
    <transition event="e5" sourceRef="move to player" targetRef="crash"/>
    <transition event="e101" guard="o1.x3" sourceRef="move to player" targetRef="crash"/>
    <transition event="e101" guard="o1.x2 &amp;&amp; !o1.x3" sourceRef="move to player" targetRef="leave bounds"/>
    <transition event="e101" guard="o1.x1 &amp;&amp; !o1.x2 &amp;&amp; !o1.x3" sourceRef="move to player" targetRef="do maneuver"/>
    <transition event="e101" sourceRef="leave bounds" targetRef="move to player">
      <outputAction ident="o1.z5"/>
    </transition>
    <transition event="e101" guard="o1.x3" sourceRef="do maneuver" targetRef="crash"/>
    <transition event="e5" sourceRef="do maneuver" targetRef="crash"/>
    <transition event="e101" guard="o1.x4 &amp;&amp; !o1.x2 &amp;&amp; !o1.x3" sourceRef="do maneuver" targetRef="move to player"/>
    <transition event="e101" guard="o1.x2 &amp;&amp; !o1.x3" sourceRef="do maneuver" targetRef="leave bounds"/>
    <transition event="e101" guard="!o1.x2 &amp;&amp; !o1.x3 &amp;&amp; !o1.x4" sourceRef="do maneuver" targetRef="do maneuver"/>
  </stateMachine>
  <stateMachine name="A2">
    <configStore class="com.evelopers.unimod.runtime.config.DistinguishConfigManager"/>
    <association clientRole="A2" supplierRole="o1" targetRef="o1"/>
    <state name="Top" type="NORMAL">
      <state name="move to player" type="NORMAL">
        <outputAction ident="o1.z2"/>
        <outputAction ident="o1.z8"/>
        <outputAction ident="o1.z1"/>
      </state>
      <state name="advance" type="NORMAL">
        <outputAction ident="o1.z8"/>
        <outputAction ident="o1.z1"/>
      </state>
      <state name="s1" type="INITIAL"/>
    </state>
    <transition event="e101" guard="!o1.x1 &amp;&amp; !o1.x2 &amp;&amp; !o1.x3 &amp;&amp; !o1.x5" sourceRef="move to player" targetRef="move to player"/>
    <transition event="e101" guard="!o1.x1 &amp;&amp; !o1.x2 &amp;&amp; !o1.x3 &amp;&amp; o1.x5" sourceRef="move to player" targetRef="advance"/>
    <transition event="e101" guard="!o1.x1 &amp;&amp; !o1.x2 &amp;&amp; !o1.x3 &amp;&amp; !o1.x5" sourceRef="advance" targetRef="move to player"/>
    <transition event="e101" guard="!o1.x1 &amp;&amp; !o1.x2 &amp;&amp; !o1.x3 &amp;&amp; o1.x5" sourceRef="advance" targetRef="advance"/>
    <transition sourceRef="s1" targetRef="move to player"/>
  </stateMachine>
</model>